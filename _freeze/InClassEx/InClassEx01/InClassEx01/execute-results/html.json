{
  "hash": "48535962b4183357e81da43969ea3171",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"In Class Exercise 1\"\nauthor: \"Kieren Chua\"\ndate: \"August 26 2024\"\ndate-modified: \"last-modified\"\nexecute: \n    eval: true # evaulate the code first\n    echo: true # See the code output\n    message: false # don't see the warnings\n    freeze: true # Prevent re-render\n---\n\n\n\n\n\n<!-- Remember to copy pase this on every page -->\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(\"sf\", \"tidyverse\", \"tmap\", \"ggstatplot\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nInstalling package into '/home/kieren/R/x86_64-pc-linux-gnu-library/4.4'\n(as 'lib' is unspecified)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: package 'ggstatplot' is not available for this version of R\n\nA version of this package for your version of R might be available elsewhere,\nsee the ideas at\nhttps://cran.r-project.org/doc/manuals/r-patched/R-admin.html#Installing-packages\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in p_install(package, character.only = TRUE, ...):\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in library(package, lib.loc = lib.loc, character.only = TRUE,\nlogical.return = TRUE, : there is no package called 'ggstatplot'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in pacman::p_load(\"sf\", \"tidyverse\", \"tmap\", \"ggstatplot\"): Failed to install/load:\nggstatplot\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load in the new data  (both versions)\nshp_data <- st_read(dsn = \"data\", layer = \"MP14_SUBZONE_WEB_PL\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `/home/kieren/ISSS626-KierenChua/InClassEx/InClassEx01/data' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n```\n\n\n:::\n\n```{.r .cell-code}\n# View the class data\nclass(shp_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"sf\"         \"data.frame\"\n```\n\n\n:::\n\n```{.r .cell-code}\nView(shp_data) # Hidden since message: false\n```\n:::\n\n\n\n\n\n## Basic Spatial Models\n1. Vector - Points / Lines / Polygons\n- Points (x, y) POINT\n- Line String ((x1, y1), (x2, y2) ...) LINESTRING\n- Polygon ((x1, y1, x2, y2 ... x1, y1)) POLYGON<!--  Always ends on the first point -->\n# ! Also has mutiple version\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Export back to KML, because  the OG KML file is corrupted \nst_write(shp_data, \"data/MP14_SUBZONE_WEB_PL.kml\", delete_dsn = TRUE) # Delete existing files, similar to shutil\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nDeleting source `data/MP14_SUBZONE_WEB_PL.kml' using driver `KML'\nWriting layer `MP14_SUBZONE_WEB_PL' to data source \n  `data/MP14_SUBZONE_WEB_PL.kml' using driver `KML'\nWriting 323 features with 15 fields and geometry type Multi Polygon.\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load in the subzone data for 2019\nmpsz19_kml <- st_read(\"data/MasterPlan2019SubzoneBoundaryNoSeaKML.kml\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `URA_MP19_SUBZONE_NO_SEA_PL' from data source \n  `/home/kieren/ISSS626-KierenChua/InClassEx/InClassEx01/data/MasterPlan2019SubzoneBoundaryNoSeaKML.kml' \n  using driver `LIBKML'\nSimple feature collection with 332 features and 22 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY, XYZ\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n\n```{.r .cell-code}\n# Note that KML very untidy, Shape data is usually better\nView(mpsz19_kml)\n```\n:::\n\n\n\n\n\n## Coordinate Systems and Map Projects\nThis Coordinate systems are important since they tell us how the data is represented and more importantly, their units. Commonly represented projectsion systems can be found [here](https://epsg.io/). _Note : Singapore uses SVY21_\n\n### Transformation\nTransforms coordinate systems from 1 projection to another, useful for different countries / systems.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Nest several arguments with %>% transfer the output of one file to the next function\nmpsz19_shp <- st_read(dsn = \"data/\", layer = \"MPSZ-2019\") %>% st_transform(crs=3414) # Similar to Ubuntu > to copy the output of error files to text files for logging\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `MPSZ-2019' from data source \n  `/home/kieren/ISSS626-KierenChua/InClassEx/InClassEx01/data' \n  using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n\n\n\n\n\n### Location of Statistics Information\nPopular data sites, can extract data here\n[data.gov](https://data.gov.sg/)\n[SingStat](https://www.singstat.gov.sg/)",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}