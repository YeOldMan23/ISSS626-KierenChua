{
  "hash": "201aa8f0fb1458315df9c75ea5cd139d",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take Home Exercise 1\"\nauthor: \"Kieren Chua\"\ndate: \"August 26 2024\"\ndate-modified: \"last-modified\"\nexecute: \n    eval: true # evaulate the code first\n    echo: true # See the code output\n    message: false # don't see the warnings\n    freeze: true # Prevent re-render\n---\n\n\n\n\n# Take Home Exercise 1\n\n## Part 1 : Reading the Data \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(\"sf\", \"tidyverse\", \"tmap\", \"ggstatsplot\")\n```\n:::\n\n\n\n\nImport the road accident data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrdacc_sf <- read_csv(\"data/thai_road_accident_2019_2022.csv\") %>% # Read the data\n    filter(!is.na(longitude) & longitude != \"\", !is.na(latitude) & latitude != \"\") %>% # Filter for N.A. and empty values\n    st_as_sf(coords = c(\"longitude\", \"latitude\"), crs=4326) %>% # Convert to SF format\n    st_transform(crs = 32647) # Convert to the correct format\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 81735 Columns: 18\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (10): province_th, province_en, agency, route, vehicle_type, presumed_c...\ndbl   (6): acc_code, number_of_vehicles_involved, number_of_fatalities, numb...\ndttm  (2): incident_datetime, report_datetime\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n:::\n\n\n\n\nView the data, check for data loss **NO MORE THAN 25%**\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\nConvert to tibbler dataframe\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}