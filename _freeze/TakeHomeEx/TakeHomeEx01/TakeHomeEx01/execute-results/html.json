{
  "hash": "e0a0e1d18c366f9d0000322f01b34973",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take Home Exercise 1\"\nauthor: \"Kieren Chua\"\ndate: \"August 26 2024\"\ndate-modified: \"last-modified\"\nexecute: \n    eval: true # evaulate the code first\n    echo: true # See the code output\n    message: false # don't see the warnings\n    freeze: true # Prevent re-render\n---\n\n\n# Take Home Exercise 1\n\n## Part 1 : Reading the Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(\"sf\", \"tidyverse\", \"tmap\", \"ggstatsplot\")\n```\n:::\n\n\nImport the road accident data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrdacc_sf <- read_csv(\"data/thai_road_accident_2019_2022.csv\") %>% # Read the data\n    filter(!is.na(longitude) & longitude != \"\", !is.na(latitude) & latitude != \"\") %>% # Filter for N.A. and empty values\n    st_as_sf(coords = c(\"longitude\", \"latitude\"), crs=4326) %>% # Convert to SF format\n    st_transform(crs = 32647) # Convert to the correct format\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 81735 Columns: 18\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (10): province_th, province_en, agency, route, vehicle_type, presumed_c...\ndbl   (6): acc_code, number_of_vehicles_involved, number_of_fatalities, numb...\ndttm  (2): incident_datetime, report_datetime\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n:::\n\n\nView the data, check for data loss **NO MORE THAN 25%**\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Change to dataframe, check col names \nrdacc_df <- as.data.frame(rdacc_sf)\ncolnames(rdacc_df)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"acc_code\"                    \"incident_datetime\"          \n [3] \"report_datetime\"             \"province_th\"                \n [5] \"province_en\"                 \"agency\"                     \n [7] \"route\"                       \"vehicle_type\"               \n [9] \"presumed_cause\"              \"accident_type\"              \n[11] \"number_of_vehicles_involved\" \"number_of_fatalities\"       \n[13] \"number_of_injuries\"          \"weather_condition\"          \n[15] \"road_description\"            \"slope_description\"          \n[17] \"geometry\"                   \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Inspect data\n\n# Get descriptions on types of data types\nprint('presumed_cause')\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"presumed_cause\"\n```\n\n\n:::\n\n```{.r .cell-code}\nunique(rdacc_df$presumed_cause)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"driving under the influence of alcohol\"         \n [2] \"speeding\"                                       \n [3] \"cutting in closely by people/vehicles/animals\"  \n [4] \"failure to yield right of way\"                  \n [5] \"failure to yield/signal\"                        \n [6] \"falling asleep\"                                 \n [7] \"running red lights/traffic signals\"             \n [8] \"other\"                                          \n [9] \"unfamiliarity with the route/unskilled driving\" \n[10] \"vehicle equipment failure\"                      \n[11] \"illegal overtaking\"                             \n[12] \"tailgating\"                                     \n[13] \"ignoring stop sign while leaving intersection\"  \n[14] \"overloaded vehicle\"                             \n[15] \"insufficient light\"                             \n[16] \"disabled vehicle without proper signals\"        \n[17] \"abrupt lane change\"                             \n[18] \"debris/obstruction on the road\"                 \n[19] \"reversing vehicle\"                              \n[20] \"brake/anti-lock brake system failure\"           \n[21] \"medical condition\"                              \n[22] \"vehicle electrical system failure\"              \n[23] \"driving in the wrong lane\"                      \n[24] \"straddling lanes\"                               \n[25] \"dangerous curve\"                                \n[26] \"failure to signal enter/exit parking\"           \n[27] \"slippery road\"                                  \n[28] \"no traffic signs\"                               \n[29] \"sudden stop\"                                    \n[30] \"using mobile phone while driving\"               \n[31] \"driving without headlights/illumination\"        \n[32] \"worn-out/tire blowout\"                          \n[33] \"obstruction in sight\"                           \n[34] \"traffic light system failure\"                   \n[35] \"disabled vehicle without proper signals/signs\"  \n[36] \"narrow road\"                                    \n[37] \"turn signal system failure\"                     \n[38] \"navigation equipment failure\"                   \n[39] \"inadequate visibility\"                          \n[40] \"road in poor condition\"                         \n[41] \"ป้ายจราจรชำรุด\"                                   \n[42] \"เส้นแบ่งทิศทางจราจรชำรุด\"                           \n[43] \"repair/construction on the road\"                \n[44] \"no presumed cause related to driver\"            \n[45] \"external disturbance\"                           \n[46] \"no presumed cause related to vehicle conditions\"\n[47] \"no presumed cause related to road conditions\"   \n[48] \"no road divider lines\"                          \n[49] \"loss of control\"                                \n[50] \"using psychoactive substances\"                  \n[51] \"no traffic light system\"                        \n[52] \"aggressive driving/overtaking\"                  \n[53] \"internal disturbance\"                           \n[54] \"มึนเมาจากแอลกอฮอล์\"                               \n```\n\n\n:::\n\n```{.r .cell-code}\nprint('number_of_fatalities')\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"number_of_fatalities\"\n```\n\n\n:::\n\n```{.r .cell-code}\nunique(rdacc_df$number_of_fatalities)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1]  0  1  3  2  5  6  9  4 10  7 11 13  8\n```\n\n\n:::\n\n```{.r .cell-code}\nprint('weather_condition')\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"weather_condition\"\n```\n\n\n:::\n\n```{.r .cell-code}\nunique(rdacc_df$road_description)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"straight road\"                       \n [2] \"wide curve\"                          \n [3] \"other\"                               \n [4] \"connecting to public/commercial area\"\n [5] \"sharp curve\"                         \n [6] \"four-way intersection\"               \n [7] \"connecting to private area\"          \n [8] \"t-intersection\"                      \n [9] \"y-intersection\"                      \n[10] \"grade-separated intersection/ramps\"  \n[11] \"merge lane\"                          \n[12] \"connecting to school area\"           \n[13] \"lane-changing area\"                  \n[14] \"u-turn area\"                         \n[15] \"roundabout\"                          \n[16] \"motorcycle lane\"                     \n[17] \"pedestrian path\"                     \n[18] \"bridge (across river/canal)\"         \n[19] \"zebra crossing/pedestrian crossing\"  \n```\n\n\n:::\n\n```{.r .cell-code}\nprint('weather_condition')\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"weather_condition\"\n```\n\n\n:::\n\n```{.r .cell-code}\nunique(rdacc_df$weather_condition)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"clear\"            \"foggy\"            \"dark\"             \"rainy\"           \n[5] \"other\"            \"natural disaster\" \"land slide\"      \n```\n\n\n:::\n\n```{.r .cell-code}\nprint('vehicle_type')\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"vehicle_type\"\n```\n\n\n:::\n\n```{.r .cell-code}\nunique(rdacc_df$vehicle_type)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"motorcycle\"                   \"private/passenger car\"       \n [3] \"4-wheel pickup truck\"         \"other\"                       \n [5] \"motorized tricycle\"           \"large truck with trailer\"    \n [7] \"van\"                          \"6-wheel truck\"               \n [9] \"7-10-wheel truck\"             \"bicycle\"                     \n[11] \"passenger pickup truck\"       \"pedestrian\"                  \n[13] \"large passenger vehicle\"      \"tractor/agricultural vehicle\"\n[15] \"three-wheeled vehicle\"       \n```\n\n\n:::\n:::\n\nSeems that there is some variation in the types of data collected. For easier processing maybe\nneed to separate types of vehicle into small, medium and large\n\n\n\n\nConvert to tibbler dataframe\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}