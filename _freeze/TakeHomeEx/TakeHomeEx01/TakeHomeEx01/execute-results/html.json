{
  "hash": "a36a8dbcc9b4268e662d14d482d9f8f9",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take Home Exercise 1\"\nauthor: \"Kieren Chua\"\ndate: \"August 26 2024\"\ndate-modified: \"last-modified\"\nexecute: \n    eval: true # evaulate the code first\n    echo: true # See the code output\n    message: false # don't see the warnings\n    freeze: true # Prevent re-render\n---\n\n\n\n# Take Home Exercise 1\n\n## Part 1 : Reading the Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(\"sf\", \"tidyverse\", \"tmap\", \"ggstatsplot\")\n```\n:::\n\n\n\nImport the road accident data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrdacc_sf <- read_csv(\"data/thai_road_accident_2019_2022.csv\") %>% # Read the data\n    mutate(Month = month(incident_datetime, label=TRUE)) %>% # Get month, set the date as factor by number\n    mutate(dayofweek = day(incident_datetime)) %>% # Day of the week \n    mutate(Month_fac = month(incident_datetime, label = FALSE)) %>% # Sort by Factor setting label = FALSE\n    filter(!is.na(longitude) & longitude != \"\", !is.na(latitude) & latitude != \"\") %>% # Filter for N.A. and empty values\n    st_as_sf(coords = c(\"longitude\", \"latitude\"), crs=4326) %>% # Convert to SF format\n    st_transform(crs = 32647) # Convert to the correct format\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 81735 Columns: 18\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (10): province_th, province_en, agency, route, vehicle_type, presumed_c...\ndbl   (6): acc_code, number_of_vehicles_involved, number_of_fatalities, numb...\ndttm  (2): incident_datetime, report_datetime\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\n# Use 32647 Format because the metro area is here\n```\n:::\n\n\n\nView the data, check for data loss **NO MORE THAN 25%**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Change to dataframe, check col names \nrdacc_df <- as.data.frame(rdacc_sf)\ncolnames(rdacc_df)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"acc_code\"                    \"incident_datetime\"          \n [3] \"report_datetime\"             \"province_th\"                \n [5] \"province_en\"                 \"agency\"                     \n [7] \"route\"                       \"vehicle_type\"               \n [9] \"presumed_cause\"              \"accident_type\"              \n[11] \"number_of_vehicles_involved\" \"number_of_fatalities\"       \n[13] \"number_of_injuries\"          \"weather_condition\"          \n[15] \"road_description\"            \"slope_description\"          \n[17] \"Month\"                       \"dayofweek\"                  \n[19] \"Month_fac\"                   \"geometry\"                   \n```\n\n\n:::\n\n```{.r .cell-code}\nrdacc_sf\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 81376 features and 19 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: -16183190 ymin: -936.228 xmax: 1200243 ymax: 4918525\nProjected CRS: WGS 84 / UTM zone 47N\n# A tibble: 81,376 × 20\n   acc_code incident_datetime   report_datetime     province_th province_en     \n *    <dbl> <dttm>              <dttm>              <chr>       <chr>           \n 1   571905 2019-01-01 00:00:00 2019-01-02 06:11:00 ลพบุรี        Loburi          \n 2  3790870 2019-01-01 00:03:00 2020-02-20 13:48:00 อุบลราชธานี   Ubon Ratchathani\n 3   599075 2019-01-01 00:05:00 2019-01-01 10:35:00 ประจวบคีรีขันธ์ Prachuap Khiri …\n 4   571924 2019-01-01 00:20:00 2019-01-02 05:12:00 เชียงใหม่     Chiang Mai      \n 5   599523 2019-01-01 00:25:00 2019-01-04 09:42:00 นครสวรรค์    Nakhon Sawan    \n 6   571982 2019-01-01 00:30:00 2019-01-07 12:46:00 แม่ฮ่องสอน    Mae Hong Son    \n 7   612782 2019-01-01 00:30:00 2019-10-25 14:25:00 ชุมพร        Chumphon        \n 8   599235 2019-01-01 00:35:00 2019-01-02 16:23:00 สิงห์บุรี       Sing Buri       \n 9   600643 2019-01-01 00:40:00 2019-01-11 10:01:00 สงขลา       Songkhla        \n10   599105 2019-01-01 00:45:00 2019-01-01 10:11:00 ตราด        Trat            \n# ℹ 81,366 more rows\n# ℹ 15 more variables: agency <chr>, route <chr>, vehicle_type <chr>,\n#   presumed_cause <chr>, accident_type <chr>,\n#   number_of_vehicles_involved <dbl>, number_of_fatalities <dbl>,\n#   number_of_injuries <dbl>, weather_condition <chr>, road_description <chr>,\n#   slope_description <chr>, Month <ord>, dayofweek <int>, Month_fac <dbl>,\n#   geometry <POINT [m]>\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Inspect data\n\n# Get descriptions on types of data types\nprint('presumed_cause')\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"presumed_cause\"\n```\n\n\n:::\n\n```{.r .cell-code}\nunique(rdacc_df$presumed_cause)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"driving under the influence of alcohol\"         \n [2] \"speeding\"                                       \n [3] \"cutting in closely by people/vehicles/animals\"  \n [4] \"failure to yield right of way\"                  \n [5] \"failure to yield/signal\"                        \n [6] \"falling asleep\"                                 \n [7] \"running red lights/traffic signals\"             \n [8] \"other\"                                          \n [9] \"unfamiliarity with the route/unskilled driving\" \n[10] \"vehicle equipment failure\"                      \n[11] \"illegal overtaking\"                             \n[12] \"tailgating\"                                     \n[13] \"ignoring stop sign while leaving intersection\"  \n[14] \"overloaded vehicle\"                             \n[15] \"insufficient light\"                             \n[16] \"disabled vehicle without proper signals\"        \n[17] \"abrupt lane change\"                             \n[18] \"debris/obstruction on the road\"                 \n[19] \"reversing vehicle\"                              \n[20] \"brake/anti-lock brake system failure\"           \n[21] \"medical condition\"                              \n[22] \"vehicle electrical system failure\"              \n[23] \"driving in the wrong lane\"                      \n[24] \"straddling lanes\"                               \n[25] \"dangerous curve\"                                \n[26] \"failure to signal enter/exit parking\"           \n[27] \"slippery road\"                                  \n[28] \"no traffic signs\"                               \n[29] \"sudden stop\"                                    \n[30] \"using mobile phone while driving\"               \n[31] \"driving without headlights/illumination\"        \n[32] \"worn-out/tire blowout\"                          \n[33] \"obstruction in sight\"                           \n[34] \"traffic light system failure\"                   \n[35] \"disabled vehicle without proper signals/signs\"  \n[36] \"narrow road\"                                    \n[37] \"turn signal system failure\"                     \n[38] \"navigation equipment failure\"                   \n[39] \"inadequate visibility\"                          \n[40] \"road in poor condition\"                         \n[41] \"ป้ายจราจรชำรุด\"                                   \n[42] \"เส้นแบ่งทิศทางจราจรชำรุด\"                           \n[43] \"repair/construction on the road\"                \n[44] \"no presumed cause related to driver\"            \n[45] \"external disturbance\"                           \n[46] \"no presumed cause related to vehicle conditions\"\n[47] \"no presumed cause related to road conditions\"   \n[48] \"no road divider lines\"                          \n[49] \"loss of control\"                                \n[50] \"using psychoactive substances\"                  \n[51] \"no traffic light system\"                        \n[52] \"aggressive driving/overtaking\"                  \n[53] \"internal disturbance\"                           \n[54] \"มึนเมาจากแอลกอฮอล์\"                               \n```\n\n\n:::\n\n```{.r .cell-code}\nprint('number_of_fatalities')\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"number_of_fatalities\"\n```\n\n\n:::\n\n```{.r .cell-code}\nunique(rdacc_df$number_of_fatalities)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1]  0  1  3  2  5  6  9  4 10  7 11 13  8\n```\n\n\n:::\n\n```{.r .cell-code}\nprint('weather_condition')\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"weather_condition\"\n```\n\n\n:::\n\n```{.r .cell-code}\nunique(rdacc_df$road_description)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"straight road\"                       \n [2] \"wide curve\"                          \n [3] \"other\"                               \n [4] \"connecting to public/commercial area\"\n [5] \"sharp curve\"                         \n [6] \"four-way intersection\"               \n [7] \"connecting to private area\"          \n [8] \"t-intersection\"                      \n [9] \"y-intersection\"                      \n[10] \"grade-separated intersection/ramps\"  \n[11] \"merge lane\"                          \n[12] \"connecting to school area\"           \n[13] \"lane-changing area\"                  \n[14] \"u-turn area\"                         \n[15] \"roundabout\"                          \n[16] \"motorcycle lane\"                     \n[17] \"pedestrian path\"                     \n[18] \"bridge (across river/canal)\"         \n[19] \"zebra crossing/pedestrian crossing\"  \n```\n\n\n:::\n\n```{.r .cell-code}\nprint('weather_condition')\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"weather_condition\"\n```\n\n\n:::\n\n```{.r .cell-code}\nunique(rdacc_df$weather_condition)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"clear\"            \"foggy\"            \"dark\"             \"rainy\"           \n[5] \"other\"            \"natural disaster\" \"land slide\"      \n```\n\n\n:::\n\n```{.r .cell-code}\nprint('vehicle_type')\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"vehicle_type\"\n```\n\n\n:::\n\n```{.r .cell-code}\nunique(rdacc_df$vehicle_type)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"motorcycle\"                   \"private/passenger car\"       \n [3] \"4-wheel pickup truck\"         \"other\"                       \n [5] \"motorized tricycle\"           \"large truck with trailer\"    \n [7] \"van\"                          \"6-wheel truck\"               \n [9] \"7-10-wheel truck\"             \"bicycle\"                     \n[11] \"passenger pickup truck\"       \"pedestrian\"                  \n[13] \"large passenger vehicle\"      \"tractor/agricultural vehicle\"\n[15] \"three-wheeled vehicle\"       \n```\n\n\n:::\n:::\n\n\nMay need to bin certain data into smaller bits so as to draw conclusions\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrdacc_df <- as.data.frame(rdacc_sf)\ncolnames(rdacc_df)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"acc_code\"                    \"incident_datetime\"          \n [3] \"report_datetime\"             \"province_th\"                \n [5] \"province_en\"                 \"agency\"                     \n [7] \"route\"                       \"vehicle_type\"               \n [9] \"presumed_cause\"              \"accident_type\"              \n[11] \"number_of_vehicles_involved\" \"number_of_fatalities\"       \n[13] \"number_of_injuries\"          \"weather_condition\"          \n[15] \"road_description\"            \"slope_description\"          \n[17] \"Month\"                       \"dayofweek\"                  \n[19] \"Month_fac\"                   \"geometry\"                   \n```\n\n\n:::\n:::\n\n\n\nRead the road data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nthai_rl_sf <- st_read(dsn = \"data\", layer = \"hotosm_tha_roads_lines_shp\") %>% st_set_crs(32647)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `hotosm_tha_roads_lines_shp' from data source \n  `/home/kieren/SMU_MITB/ISSS626/ISSS626-KierenChua/TakeHomeEx/TakeHomeEx01/data' \n  using driver `ESRI Shapefile'\nSimple feature collection with 2792590 features and 14 fields\nGeometry type: MULTILINESTRING\nDimension:     XY\nBounding box:  xmin: 97.34457 ymin: 5.643645 xmax: 105.6528 ymax: 20.47168\nCRS:           NA\n```\n\n\n:::\n\n```{.r .cell-code}\n# label as 4326, transfrom to 32647 same as above  \nthai_rl_sf\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 2792590 features and 14 fields\nGeometry type: MULTILINESTRING\nDimension:     XY\nBounding box:  xmin: 97.34457 ymin: 5.643645 xmax: 105.6528 ymax: 20.47168\nProjected CRS: WGS 84 / UTM zone 47N\nFirst 10 features:\n             name               name_en        highway  surface smoothness\n1      ถนนฉลองกรุง    Chalong Krung Road      secondary    paved       <NA>\n2  ซอยฉลองกรุง 1/1 Soi Chalong Krung 1/1    residential     <NA>       <NA>\n3            <NA>                  <NA> secondary_link     <NA>       <NA>\n4            <NA>                  <NA>        service     <NA>       <NA>\n5      ถนนฉลองกรุง    Chalong Krung Road      secondary concrete       <NA>\n6            <NA>                  <NA>        service     <NA>       <NA>\n7     ถนนเอราวัณ 1         Erawan 1 Road       tertiary     <NA>       <NA>\n8            <NA>                  <NA>           path  unpaved       <NA>\n9            <NA>                  <NA>        service     <NA>       <NA>\n10           <NA>                  <NA>    residential     <NA>       <NA>\n   width lanes oneway bridge layer source        name_th     osm_id  osm_type\n1   <NA>  <NA>    yes   <NA>  <NA>   <NA>     ถนนฉลองกรุง 1125681229 ways_line\n2   <NA>  <NA>   <NA>   <NA>  <NA>   <NA> ซอยฉลองกรุง 1/1  594401607 ways_line\n3   <NA>  <NA>    yes   <NA>  <NA>   <NA>           <NA>  472283206 ways_line\n4   <NA>  <NA>   <NA>   <NA>  <NA>   <NA>           <NA>  594401608 ways_line\n5   <NA>     2    yes    yes     1   Bing     ถนนฉลองกรุง  116847248 ways_line\n6   <NA>  <NA>   <NA>   <NA>  <NA>   <NA>           <NA>  317485095 ways_line\n7   <NA>  <NA>   <NA>   <NA>  <NA>   <NA>    ถนนเอราวัณ 1  378672881 ways_line\n8   <NA>  <NA>   <NA>   <NA>  <NA>    GPS           <NA> 1238351123 ways_line\n9   <NA>  <NA>   <NA>   <NA>  <NA>   <NA>           <NA>  909942692 ways_line\n10  <NA>  <NA>   <NA>   <NA>  <NA>   <NA>           <NA>  694824299 ways_line\n                         geometry\n1  MULTILINESTRING ((100.7913 ...\n2  MULTILINESTRING ((100.7882 ...\n3  MULTILINESTRING ((100.7844 ...\n4  MULTILINESTRING ((100.7873 ...\n5  MULTILINESTRING ((100.7831 ...\n6  MULTILINESTRING ((100.7931 ...\n7  MULTILINESTRING ((100.6416 ...\n8  MULTILINESTRING ((98.87378 ...\n9  MULTILINESTRING ((100.193 1...\n10 MULTILINESTRING ((100.1994 ...\n```\n\n\n:::\n:::\n\n\n\nWe are only interested in the Thai Metro Area, so need to read the boundaries from the boundary data and filter there\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Read from the province layer, note that the Thai Metro area contains only\n    # Bangkok\n    # Nonthaburi\n    # Nakhon Pathom\n    # Pathum Thani\n    # Samut Prakan\n    # Samut Sakhon\nthai_boundaries <- st_read(dsn = \"data\", layer = \"tha_admbnda_adm1_rtsd_20220121\") %>% st_transform(crs = 32647)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `tha_admbnda_adm1_rtsd_20220121' from data source \n  `/home/kieren/SMU_MITB/ISSS626/ISSS626-KierenChua/TakeHomeEx/TakeHomeEx01/data' \n  using driver `ESRI Shapefile'\nSimple feature collection with 77 features and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 97.34336 ymin: 5.613038 xmax: 105.637 ymax: 20.46507\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n\n## Part 2 : Initial Plot\nWe can plot the data so that we can see any kernel clusters\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Road accident Data\n# plot(rdacc_sf)\n# plot(thai_rl_sf)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Filter the 2nd part too\n# write_rds({SHAPE FILE}, \"data/rds/{SHAPE_FILE}.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# To read the file\n# SHAPE_NAME <- read_rds(\"data/rds/{SHAPE_FILE}.rds\")\n```\n:::\n\n\n\nConvert to tibbler dataframe\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}