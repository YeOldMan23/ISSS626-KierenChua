{
  "hash": "837055362da5032201c68b04f9c36d3c",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Hands on Exercise 8\"\nauthor: \"Kieren Chua\"\ndate: \"October 20 2024\"\ndate-modified: \"last-modified\"\nexecute: \n    eval: true # evaulate the code first\n    echo: true # See the code output\n    message: false # don't see the warnings\n    freeze: true # Prevent re-render\nhtml-table-processing: none\n---\n\n\n# Part 1 : Read and Process Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, spdep, GWmodel, SpatialML, \n               tmap, rsample, Metrics, tidyverse)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmdata <- read_rds(\"data/mdata.rds\")\n```\n:::\n\n\n## Make train-test split\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\n## Remove duplicated data\nmdata <- mdata %>%\n  distinct(st_coordinates(.), .keep_all = TRUE)\n\nresale_split <- initial_split(mdata, \n                              prop = 6.5/10,)\ntrain_data <- training(resale_split)\ntest_data <- testing(resale_split)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(train_data, \"data/train_data.rds\")\nwrite_rds(test_data, \"data/test_data.rds\")\n```\n:::\n\n\n## Correlation matrix\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmdata_nogeo <- mdata %>%\n  st_drop_geometry()\ncorrplot::corrplot(cor(mdata_nogeo[, 2:17]), \n                   diag = FALSE, \n                   order = \"AOE\",\n                   tl.pos = \"td\", \n                   tl.cex = 0.5, \n                   method = \"number\", \n                   type = \"upper\")\n```\n\n::: {.cell-output-display}\n![](HandsonEx08_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n## Re-read data\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntrain_data <- read_rds(\"data/train_data.rds\")\ntest_data <- read_rds(\"data/test_data.rds\")\n```\n:::\n\n\n# Part 2 : Basic Linear Regression Model\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprice_mlr <- lm(resale_price ~ floor_area_sqm +\n                  storey_order + remaining_lease_mths +\n                  PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER +\n                  PROX_MRT + PROX_PARK + PROX_MALL + \n                  PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                  WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +\n                  WITHIN_1KM_PRISCH,\n                data=train_data)\nsummary(price_mlr)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = resale_price ~ floor_area_sqm + storey_order + remaining_lease_mths + \n    PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER + PROX_MRT + PROX_PARK + \n    PROX_MALL + PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN + \n    WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + WITHIN_1KM_PRISCH, \n    data = train_data)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-192261  -35863   -2390   31990  453834 \n\nCoefficients:\n                           Estimate Std. Error t value Pr(>|t|)    \n(Intercept)               87504.481  16637.361   5.260 1.54e-07 ***\nfloor_area_sqm             3156.511    136.581  23.111  < 2e-16 ***\nstorey_order              14051.102    620.903  22.630  < 2e-16 ***\nremaining_lease_mths        327.988      8.528  38.458  < 2e-16 ***\nPROX_CBD                 -15673.691    317.565 -49.356  < 2e-16 ***\nPROX_ELDERLYCARE          -9810.575   1616.306  -6.070 1.43e-09 ***\nPROX_HAWKER              -20022.486   2002.227 -10.000  < 2e-16 ***\nPROX_MRT                 -40376.482   2896.715 -13.939  < 2e-16 ***\nPROX_PARK                -11979.297   2525.996  -4.742 2.20e-06 ***\nPROX_MALL                -17617.639   3088.211  -5.705 1.27e-08 ***\nPROX_SUPERMARKET         -25243.771   6655.923  -3.793 0.000152 ***\nWITHIN_350M_KINDERGARTEN   3470.799    992.747   3.496 0.000478 ***\nWITHIN_350M_CHILDCARE     -2472.370    564.758  -4.378 1.24e-05 ***\nWITHIN_350M_BUS            -153.649    367.966  -0.418 0.676295    \nWITHIN_1KM_PRISCH         -9574.875    766.042 -12.499  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 56440 on 3271 degrees of freedom\nMultiple R-squared:  0.7339,\tAdjusted R-squared:  0.7328 \nF-statistic: 644.4 on 14 and 3271 DF,  p-value: < 2.2e-16\n```\n\n\n:::\n:::\n\n# Part 3: Using gwr predictive method\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntrain_data_sp <- as_Spatial(train_data)\ntrain_data_sp\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nclass       : SpatialPointsDataFrame \nfeatures    : 3286 \nextent      : 11597.31, 42523.18, 28217.39, 48741.06  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 18\nnames       : resale_price, floor_area_sqm, storey_order, remaining_lease_mths,          PROX_CBD,     PROX_ELDERLYCARE,        PROX_HAWKER,          PROX_MRT,          PROX_PARK,   PROX_GOOD_PRISCH,            PROX_MALL,            PROX_CHAS,     PROX_SUPERMARKET, WITHIN_350M_KINDERGARTEN, WITHIN_350M_CHILDCARE, ... \nmin values  :       230888,             74,            1,                  546, 0.999393538715878, 1.98943787433087e-08, 0.0333358643817954, 0.043400974412627, 0.0502664084494264, 0.0652540365486641, 1.13983026324015e-06, 7.28527615277263e-09, 6.67273080236739e-07,                        0,                     0, ... \nmax values  :      1088000,            138,           14,                 1164,  19.4237844042343,     3.26361598929577,   2.86763031236184,   2.0902251353839,   2.41313695915468,   10.4013344251086,     2.27100643784442,    0.773905257672601,     1.36375821567757,                        7,                    20, ... \n```\n\n\n:::\n:::\n\n## Compute Adaptive bandwidth\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbw_adaptive <- bw.gwr(resale_price ~ floor_area_sqm +\n                  storey_order + remaining_lease_mths +\n                  PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER +\n                  PROX_MRT + PROX_PARK + PROX_MALL + \n                  PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                  WITHIN_350M_CHILDCARE +\n                  WITHIN_1KM_PRISCH,\n                  data=train_data_sp,\n                  approach=\"CV\",\n                  kernel=\"gaussian\",\n                  adaptive=TRUE,\n                  longlat=FALSE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nTake a cup of tea and have a break, it will take a few minutes.\n          -----A kind suggestion from GWmodel development group\nAdaptive bandwidth: 2038 CV score: 9.930103e+12 \nAdaptive bandwidth: 1268 CV score: 9.398633e+12 \nAdaptive bandwidth: 790 CV score: 8.589927e+12 \nAdaptive bandwidth: 497 CV score: 7.418024e+12 \nAdaptive bandwidth: 313 CV score: 6.139566e+12 \nAdaptive bandwidth: 202 CV score: 5.204821e+12 \nAdaptive bandwidth: 130 CV score: 4.543495e+12 \nAdaptive bandwidth: 89 CV score: 4.124259e+12 \nAdaptive bandwidth: 60 CV score: 3.790309e+12 \nAdaptive bandwidth: 46 CV score: 3.59201e+12 \nAdaptive bandwidth: 33 CV score: 3.431584e+12 \nAdaptive bandwidth: 29 CV score: 3.369236e+12 \nAdaptive bandwidth: 22 CV score: 3.30101e+12 \nAdaptive bandwidth: 22 CV score: 3.30101e+12 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(bw_adaptive, \"data/bw_adaptive.rds\")\n```\n:::\n\n\n## Reusing the bw_adaptive, Make GWR\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbw_adaptive <- read_rds(\"data/bw_adaptive.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngwr_adaptive <- gwr.basic(formula = resale_price ~\n                            floor_area_sqm + storey_order +\n                            remaining_lease_mths + PROX_CBD + \n                            PROX_ELDERLYCARE + PROX_HAWKER +\n                            PROX_MRT + PROX_PARK + PROX_MALL + \n                            PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                            WITHIN_350M_CHILDCARE +\n                            WITHIN_1KM_PRISCH,\n                          data=train_data_sp,\n                          bw=bw_adaptive, \n                          kernel = 'gaussian', \n                          adaptive=TRUE,\n                          longlat = FALSE)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(gwr_adaptive, \"data/gwr_adaptive.rds\")\n```\n:::\n\n\n## Read GWR adaptive\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngwr_adaptive <- read_rds(\"data/gwr_adaptive.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngwr_adaptive\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   ***********************************************************************\n   *                       Package   GWmodel                             *\n   ***********************************************************************\n   Program starts at: 2024-10-20 21:31:56.095974 \n   Call:\n   gwr.basic(formula = resale_price ~ floor_area_sqm + storey_order + \n    remaining_lease_mths + PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER + \n    PROX_MRT + PROX_PARK + PROX_MALL + PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN + \n    WITHIN_350M_CHILDCARE + WITHIN_1KM_PRISCH, data = train_data_sp, \n    bw = bw_adaptive, kernel = \"gaussian\", adaptive = TRUE, longlat = FALSE)\n\n   Dependent (y) variable:  resale_price\n   Independent variables:  floor_area_sqm storey_order remaining_lease_mths PROX_CBD PROX_ELDERLYCARE PROX_HAWKER PROX_MRT PROX_PARK PROX_MALL PROX_SUPERMARKET WITHIN_350M_KINDERGARTEN WITHIN_350M_CHILDCARE WITHIN_1KM_PRISCH\n   Number of data points: 3286\n   ***********************************************************************\n   *                    Results of Global Regression                     *\n   ***********************************************************************\n\n   Call:\n    lm(formula = formula, data = data)\n\n   Residuals:\n    Min      1Q  Median      3Q     Max \n-191767  -35924   -2399   31994  454103 \n\n   Coefficients:\n                              Estimate Std. Error t value Pr(>|t|)    \n   (Intercept)               86420.008  16431.324   5.259 1.54e-07 ***\n   floor_area_sqm             3157.057    136.557  23.119  < 2e-16 ***\n   storey_order              14050.370    620.823  22.632  < 2e-16 ***\n   remaining_lease_mths        327.972      8.527  38.462  < 2e-16 ***\n   PROX_CBD                 -15688.228    315.611 -49.707  < 2e-16 ***\n   PROX_ELDERLYCARE          -9862.477   1611.317  -6.121 1.04e-09 ***\n   PROX_HAWKER              -19953.076   1995.063 -10.001  < 2e-16 ***\n   PROX_MRT                 -40360.741   2896.104 -13.936  < 2e-16 ***\n   PROX_PARK                -12074.176   2515.438  -4.800 1.66e-06 ***\n   PROX_MALL                -17396.502   3042.079  -5.719 1.17e-08 ***\n   PROX_SUPERMARKET         -25126.601   6649.166  -3.779 0.000160 ***\n   WITHIN_350M_KINDERGARTEN   3446.317    990.889   3.478 0.000512 ***\n   WITHIN_350M_CHILDCARE     -2495.112    562.055  -4.439 9.32e-06 ***\n   WITHIN_1KM_PRISCH         -9583.573    765.662 -12.517  < 2e-16 ***\n\n   ---Significance stars\n   Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 \n   Residual standard error: 56430 on 3272 degrees of freedom\n   Multiple R-squared: 0.7339\n   Adjusted R-squared: 0.7328 \n   F-statistic: 694.1 on 13 and 3272 DF,  p-value: < 2.2e-16 \n   ***Extra Diagnostic information\n   Residual sum of squares: 1.041939e+13\n   Sigma(hat): 56327.37\n   AIC:  81243.95\n   AICc:  81244.1\n   BIC:  78170.87\n   ***********************************************************************\n   *          Results of Geographically Weighted Regression              *\n   ***********************************************************************\n\n   *********************Model calibration information*********************\n   Kernel function: gaussian \n   Adaptive bandwidth: 22 (number of nearest neighbours)\n   Regression points: the same locations as observations are used.\n   Distance metric: Euclidean distance metric is used.\n\n   ****************Summary of GWR coefficient estimates:******************\n                                   Min.     1st Qu.      Median     3rd Qu.\n   Intercept                -3247141.82  -256360.15    11113.90   307544.91\n   floor_area_sqm              -3954.71     1429.90     2077.25     2897.86\n   storey_order                 1790.04     7668.50    10441.61    14591.37\n   remaining_lease_mths         -459.00      292.17      388.40      482.35\n   PROX_CBD                  -572134.25   -36757.15   -13146.60     6309.07\n   PROX_ELDERLYCARE          -311463.55   -27059.28     2038.79    33213.78\n   PROX_HAWKER              -2276998.10   -28208.83     4005.61    41157.23\n   PROX_MRT                 -1071133.09  -101736.36   -61930.04   -24477.62\n   PROX_PARK                 -519269.59   -30369.73    -1348.26    30252.05\n   PROX_MALL                 -555159.58   -49906.74   -17886.41    31077.14\n   PROX_SUPERMARKET          -403291.40   -53224.56   -19076.70    23297.77\n   WITHIN_350M_KINDERGARTEN   -32548.75    -4009.68      153.62     3845.13\n   WITHIN_350M_CHILDCARE      -15061.85    -1650.80      453.80     3030.89\n   WITHIN_1KM_PRISCH          -44766.18    -6142.64    -1072.20     4067.33\n                                  Max.\n   Intercept                9186124.99\n   floor_area_sqm              7578.73\n   storey_order               36377.83\n   remaining_lease_mths         747.64\n   PROX_CBD                  235147.83\n   PROX_ELDERLYCARE          417902.06\n   PROX_HAWKER               837030.53\n   PROX_MRT                 1903843.31\n   PROX_PARK                 199854.60\n   PROX_MALL                 624004.99\n   PROX_SUPERMARKET          426578.90\n   WITHIN_350M_KINDERGARTEN   29294.37\n   WITHIN_350M_CHILDCARE      16318.86\n   WITHIN_1KM_PRISCH          25622.77\n   ************************Diagnostic information*************************\n   Number of data points: 3286 \n   Effective number of parameters (2trace(S) - trace(S'S)): 991.8085 \n   Effective degrees of freedom (n-2trace(S) + trace(S'S)): 2294.191 \n   AICc (GWR book, Fotheringham, et al. 2002, p. 61, eq 2.33): 77441.83 \n   AIC (GWR book, Fotheringham, et al. 2002,GWR p. 96, eq. 4.22): 76152.4 \n   BIC (GWR book, Fotheringham, et al. 2002,GWR p. 61, eq. 2.34): 78459.1 \n   Residual sum of squares: 1.756861e+12 \n   R-square value:  0.9551288 \n   Adjusted R-square value:  0.9357219 \n\n   ***********************************************************************\n   Program stops at: 2024-10-20 21:32:04.402907 \n```\n\n\n:::\n:::\n\n## Conduct GWR on test data\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntest_data_sp <- test_data %>%\n  as_Spatial()\ntest_data_sp\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nclass       : SpatialPointsDataFrame \nfeatures    : 1770 \nextent      : 11824.29, 42623.63, 28287.8, 48635.08  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 18\nnames       : resale_price, floor_area_sqm, storey_order, remaining_lease_mths,         PROX_CBD,     PROX_ELDERLYCARE,       PROX_HAWKER,           PROX_MRT,          PROX_PARK,  PROX_GOOD_PRISCH,        PROX_MALL,            PROX_CHAS,     PROX_SUPERMARKET, WITHIN_350M_KINDERGARTEN, WITHIN_350M_CHILDCARE, ... \nmin values  :       240000,             74,            1,                  555, 1.14923182318838, 9.26628957858198e-07, 0.046380672523336, 0.0220407324774434, 0.0441643212802781, 0.111583997308681,                0, 4.55547870890763e-09, 1.21715176356525e-07,                        0,                     0, ... \nmax values  :      1050000,            133,           14,                 1150, 19.6500691667807,     3.30163731686804,  2.62907660297845,   2.13060636038504,   2.38376543636855,  10.6223726149914, 2.25269448786787,    0.808332738794272,     1.57131703651196,                        6,                    16, ... \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngwr_bw_test_adaptive <- bw.gwr(resale_price ~ floor_area_sqm +\n                  storey_order + remaining_lease_mths +\n                  PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER +\n                  PROX_MRT + PROX_PARK + PROX_MALL + \n                  PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                  WITHIN_350M_CHILDCARE +\n                  WITHIN_1KM_PRISCH,\n                  data=test_data_sp,\n                  approach=\"CV\",\n                  kernel=\"gaussian\",\n                  adaptive=TRUE,\n                  longlat=FALSE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nTake a cup of tea and have a break, it will take a few minutes.\n          -----A kind suggestion from GWmodel development group\nAdaptive bandwidth: 1101 CV score: 5.962459e+12 \nAdaptive bandwidth: 688 CV score: 5.596136e+12 \nAdaptive bandwidth: 432 CV score: 5.08012e+12 \nAdaptive bandwidth: 274 CV score: 4.475739e+12 \nAdaptive bandwidth: 176 CV score: 3.672364e+12 \nAdaptive bandwidth: 116 CV score: 3.108539e+12 \nAdaptive bandwidth: 78 CV score: 2.69541e+12 \nAdaptive bandwidth: 55 CV score: 2.457459e+12 \nAdaptive bandwidth: 40 CV score: 2.232029e+12 \nAdaptive bandwidth: 31 CV score: 2.141079e+12 \nAdaptive bandwidth: 25 CV score: 2.143112e+12 \nAdaptive bandwidth: 34 CV score: 2.157494e+12 \nAdaptive bandwidth: 28 CV score: 2.136566e+12 \nAdaptive bandwidth: 27 CV score: 2.135811e+12 \nAdaptive bandwidth: 25 CV score: 2.143112e+12 \nAdaptive bandwidth: 26 CV score: 2.13803e+12 \nAdaptive bandwidth: 25 CV score: 2.143112e+12 \nAdaptive bandwidth: 25 CV score: 2.143112e+12 \nAdaptive bandwidth: 24 CV score: 2.14308e+12 \nAdaptive bandwidth: 24 CV score: 2.14308e+12 \nAdaptive bandwidth: 23 CV score: 2.144021e+12 \nAdaptive bandwidth: 23 CV score: 2.144021e+12 \nAdaptive bandwidth: 22 CV score: 2.156655e+12 \nAdaptive bandwidth: 22 CV score: 2.156655e+12 \nAdaptive bandwidth: 21 CV score: 2.155595e+12 \nAdaptive bandwidth: 21 CV score: 2.155595e+12 \nAdaptive bandwidth: 20 CV score: 2.167145e+12 \nAdaptive bandwidth: 20 CV score: 2.167145e+12 \nAdaptive bandwidth: 19 CV score: 2.173598e+12 \nAdaptive bandwidth: 19 CV score: 2.173598e+12 \nAdaptive bandwidth: 18 CV score: 2.184001e+12 \nAdaptive bandwidth: 18 CV score: 2.184001e+12 \nAdaptive bandwidth: 17 CV score: 2.213283e+12 \nAdaptive bandwidth: 17 CV score: 2.213283e+12 \nAdaptive bandwidth: 16 CV score: 2.226609e+12 \nAdaptive bandwidth: 16 CV score: 2.226609e+12 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# gwr_pred <- gwr.predict(formula = resale_price ~\n#                          floor_area_sqm + storey_order +\n#                          remaining_lease_mths + PROX_CBD + \n#                          PROX_ELDERLYCARE + PROX_HAWKER + \n#                          PROX_MRT + PROX_PARK + PROX_MALL + \n#                          PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n#                          WITHIN_350M_CHILDCARE + \n#                          WITHIN_1KM_PRISCH, \n#                        data=train_data_sp, \n#                        predictdata = test_data_sp, \n#                        bw=16, \n#                        kernel = 'gaussian', \n#                        adaptive=FALSE, \n#                        longlat = FALSE)\n```\n:::\n\n\n# Part 4 : Preparing coordinates data\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncoords <- st_coordinates(mdata)\ncoords_train <- st_coordinates(train_data)\ncoords_test <- st_coordinates(test_data)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncoords_train <- write_rds(coords_train, \"data/coords_train.rds\" )\ncoords_test <- write_rds(coords_test, \"data/coords_test.rds\" )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncoords_train <- write_rds(coords_train, \"data/coords_train.rds\" )\ncoords_test <- write_rds(coords_test, \"data/coords_test.rds\" )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntrain_data <- train_data %>% \n  st_drop_geometry()\n```\n:::\n\n\n# Part 5: Calibrating Random Forest Model\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\nrf <- ranger(resale_price ~ floor_area_sqm + storey_order + \n               remaining_lease_mths + PROX_CBD + PROX_ELDERLYCARE + \n               PROX_HAWKER + PROX_MRT + PROX_PARK + PROX_MALL + \n               PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n               WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + \n               WITHIN_1KM_PRISCH,\n             data=train_data)\nrf\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRanger result\n\nCall:\n ranger(resale_price ~ floor_area_sqm + storey_order + remaining_lease_mths +      PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER + PROX_MRT + PROX_PARK +      PROX_MALL + PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +      WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + WITHIN_1KM_PRISCH,      data = train_data) \n\nType:                             Regression \nNumber of trees:                  500 \nSample size:                      3286 \nNumber of independent variables:  14 \nMtry:                             3 \nTarget node size:                 5 \nVariable importance mode:         none \nSplitrule:                        variance \nOOB prediction error (MSE):       1519835433 \nR squared (OOB):                  0.8724847 \n```\n\n\n:::\n:::\n\n\n## Save and Read model\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(rf, \"data/rf.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrf <- read_rds(\"data/rf.rds\")\nrf\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRanger result\n\nCall:\n ranger(resale_price ~ floor_area_sqm + storey_order + remaining_lease_mths +      PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER + PROX_MRT + PROX_PARK +      PROX_MALL + PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +      WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + WITHIN_1KM_PRISCH,      data = train_data) \n\nType:                             Regression \nNumber of trees:                  500 \nSample size:                      3286 \nNumber of independent variables:  14 \nMtry:                             3 \nTarget node size:                 5 \nVariable importance mode:         none \nSplitrule:                        variance \nOOB prediction error (MSE):       1519835433 \nR squared (OOB):                  0.8724847 \n```\n\n\n:::\n:::\n\n\n## Calibrating Geographical Random Forest Mode\n\n### Calibrate using Trainig Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\ngwRF_adaptive <- grf(formula = resale_price ~ floor_area_sqm + storey_order +\n                       remaining_lease_mths + PROX_CBD + PROX_ELDERLYCARE +\n                       PROX_HAWKER + PROX_MRT + PROX_PARK + PROX_MALL +\n                       PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                       WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +\n                       WITHIN_1KM_PRISCH,\n                     dframe=train_data, \n                     bw=55,\n                     kernel=\"adaptive\",\n                     coords=coords_train)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nNumber of Observations: 3286\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nNumber of Independent Variables: 14\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nKernel: Adaptive\nNeightbours: 55\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\n--------------- Global ML Model Summary ---------------\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRanger result\n\nCall:\n ranger(resale_price ~ floor_area_sqm + storey_order + remaining_lease_mths +      PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER + PROX_MRT + PROX_PARK +      PROX_MALL + PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +      WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + WITHIN_1KM_PRISCH,      data = train_data, num.trees = 500, mtry = 4, importance = \"impurity\",      num.threads = NULL) \n\nType:                             Regression \nNumber of trees:                  500 \nSample size:                      3286 \nNumber of independent variables:  14 \nMtry:                             4 \nTarget node size:                 5 \nVariable importance mode:         impurity \nSplitrule:                        variance \nOOB prediction error (MSE):       1411075321 \nR squared (OOB):                  0.8816098 \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nImportance:\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n          floor_area_sqm             storey_order     remaining_lease_mths \n            1.897232e+12             4.179833e+12             6.385454e+12 \n                PROX_CBD         PROX_ELDERLYCARE              PROX_HAWKER \n            1.444867e+13             1.858077e+12             1.465071e+12 \n                PROX_MRT                PROX_PARK                PROX_MALL \n            2.012133e+12             1.407332e+12             1.319864e+12 \n        PROX_SUPERMARKET WITHIN_350M_KINDERGARTEN    WITHIN_350M_CHILDCARE \n            8.191610e+11             2.754457e+11             4.479655e+11 \n         WITHIN_350M_BUS        WITHIN_1KM_PRISCH \n            5.244716e+11             1.546274e+12 \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nMean Square Error (Not OOB): 271965191.795\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nR-squared (Not OOB) %: 97.717\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nAIC (Not OOB): 63848.013\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nAICc (Not OOB): 63848.16\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\n--------------- Local Model Summary ---------------\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nResiduals OOB:\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. \n-274189.5  -17446.5      89.5     693.8   17396.2  413389.4 \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nResiduals Predicted (Not OOB):\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. \n-44238.18  -1772.06    -26.23     94.19   1813.91  59960.89 \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nLocal Variable Importance:\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                               Min          Max        Mean         StD\nfloor_area_sqm           301395023 187822895875 18641922877 24336416937\nstorey_order             404678420 286151101164 20185105175 36314960854\nremaining_lease_mths     594588562 497382310698 49861191878 76755384279\nPROX_CBD                 477385590 183273355871 17265479540 23551973198\nPROX_ELDERLYCARE         485038396 163267207724 14103673813 19101959500\nPROX_HAWKER              738706182 358682675222 14071831316 20658133111\nPROX_MRT                 645580611 262979812235 18121556659 29603769236\nPROX_PARK                578730440 188391597658 14453762108 21889264078\nPROX_MALL                567921642 290107362532 20801636592 37776672051\nPROX_SUPERMARKET         555032444 133868899229 11567329697 16153327327\nWITHIN_350M_KINDERGARTEN         0  90193390636  3296391118  7526096507\nWITHIN_350M_CHILDCARE    152824973 154411737989  6273557137 12977080992\nWITHIN_350M_BUS          202785776 147096270280  6773082574 11268602906\nWITHIN_1KM_PRISCH         19337353 131624279534  4696775697 10351640180\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nMean squared error (OOB): 1450637697.776\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nR-squared (OOB) %: 87.825\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nAIC (OOB): 69349.054\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nAICc (OOB): 69349.201\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nMean squared error Predicted (Not OOB): 26360591.866\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nR-squared Predicted (Not OOB) %: 99.779\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nAIC Predicted (Not OOB): 56179.133\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nAICc Predicted (Not OOB): 56179.28\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nCalculation time (in seconds): 2.2515\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(gwRF_adaptive, \"data/gwRF_adaptive.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngwRF_adaptive <- read_rds(\"data/gwRF_adaptive.rds\")\n```\n:::\n\n\n### Predicting by using test data\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntest_data <- cbind(test_data, coords_test) %>%\n  st_drop_geometry()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngwRF_pred <- predict.grf(gwRF_adaptive, \n                           test_data, \n                           x.var.name=\"X\",\n                           y.var.name=\"Y\", \n                           local.w=1,\n                           global.w=0)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nGRF_pred <- write_rds(gwRF_pred, \"data/GRF_pred.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nGRF_pred <- read_rds(\"data/GRF_pred.rds\")\nGRF_pred_df <- as.data.frame(GRF_pred)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntest_data_p <- cbind(test_data, GRF_pred_df)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(test_data_p, \"data/test_data_p.rds\")\n```\n:::\n\n\n# Part 6 :Calculating Root Mean Square Error\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrmse(test_data_p$resale_price, \n     test_data_p$GRF_pred)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 37773.91\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = test_data_p,\n       aes(x = GRF_pred,\n           y = resale_price)) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](HandsonEx08_files/figure-html/unnamed-chunk-36-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "HandsonEx08_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}