---
title: "In Class Exercise 10"
author: "Kieren Chua"
date: "November 4 2024"
date-modified: "last_modified"
execute: 
    eval: true # evaulate the code first
    echo: true # See the code output
    message: false # don't see the warnings
    freeze: true # Prevent re-render
---

# Part 1 : Loading Data and Packages

```{r}
pacman::p_load(tidyverse, sf, tmap, httr, performance)

```

```{r}
file_list <- c("data/aspatial/ResidentialTransaction20241110111743.csv", "data/aspatial/ResidentialTransaction20241110111832.csv")

realis_data <- file_list %>%
  map_dfr(read_csv)
```

# Part 2 : Wrangling Data

```{r}
condo_resale <- realis_data %>%
  mutate(`Sale Date` = dmy(`Sale Date`)) %>%
  filter(`Type of Sale` == "Resale" &
           `Property Type` == "Condominium")
```

```{r}
postcode <- unique(condo_resale$`Postal Code`)
```

```{r}
url <- "https://onemap.gov.sg/api/common/elastic/search"
found <- data.frame()
not_found <- data.frame()

for (postcode in postcode){
  query <- list('searchVal'=postcode, 'returnGeom'='Y', 
                'getAddrDetails'='Y', 'pageNum'='1')
  res <- GET(url, query=query)
  if ((content(res)$found)!=0){
    found <- rbind(found, data.frame(content(res))[4:13])
  } else {not_found = data.frame(postcode)
  }
}
```

```{r}
found <- found %>%
  select(c(6:8)) %>%
  rename(POSTAL = `results.POSTAL`,
         XCOORD = `results.X`,
         YCOORD = `results.Y`)
```

```{r}
condo_resale_geocoded = left_join(
  condo_resale, found, 
  by = c('Postal Code' = 'POSTAL'))
```

```{r}
condo_resale_sf <- st_as_sf(condo_resale_geocoded, 
                            coords = c("XCOORD",
                                       "YCOORD"),
                            crs=3414)
```

```{r}
overlapping_points <- condo_resale_sf %>%
  mutate(overlap = lengths(st_equals(., .)) > 1)
nrow(overlapping_points)
```

We can see that there are 6005 overlapping points, so we must jitter the points to remove them

```{r}
condo_resale_sf <- condo_resale_sf %>%
  st_jitter(amount = 2)
```
